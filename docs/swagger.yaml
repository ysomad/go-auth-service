basePath: /api/v1
definitions:
  domain.ArchiveUserRequest:
    properties:
      is_active:
        example: true
        type: boolean
    required:
    - is_active
    type: object
  domain.CreateUserRequest:
    properties:
      email:
        example: user@mail.com
        type: string
      password:
        example: secret
        type: string
    required:
    - email
    - password
    type: object
  domain.CreateUserResponse:
    properties:
      created_at:
        example: "2021-08-31T16:55:18.080768Z"
        type: string
      email:
        example: user@mail.com
        type: string
      id:
        type: integer
    type: object
  domain.UpdateUserRequest:
    properties:
      first_name:
        example: Alex
        type: string
      last_name:
        example: Malykh
        type: string
      username:
        example: username
        type: string
    type: object
  v1.messageResponse:
    properties:
      error:
        example: message
        type: string
    type: object
  v1.validationErrorResponse:
    properties:
      error:
        additionalProperties:
          type: string
        example:
          password: must be at least 6 characters in length
        type: object
    type: object
host: 0.0.0.0:8080
info:
  contact: {}
  description: REST API authentication service
  title: Golang auth service
  version: "1.0"
paths:
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      operationId: create
      parameters:
      - description: To register a new user email and password should be provided
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.messageResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.validationErrorResponse'
      summary: Create
      tags:
      - Users
  /users/{id}:
    put:
      consumes:
      - application/json
      description: Update user data
      operationId: update
      parameters:
      - description: All required fields should be provided
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateUserRequest'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.messageResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.validationErrorResponse'
      summary: Update
      tags:
      - Users
  /users/{id}/archive:
    patch:
      consumes:
      - application/json
      description: Update user state
      operationId: archive
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: To change user state is_archive should be provided
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.ArchiveUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.messageResponse'
      summary: Archive
      tags:
      - Users
swagger: "2.0"
